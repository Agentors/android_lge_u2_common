#!/system/bin/sh

busybox mount -o remount,nosuid,nodev,noatime,nodiratime -t auto /;

# GPS fix
	chown system system /system/bin/glgps;
	chmod 777 /system/bin/glgps;

# disable debugging
echo 0 > /sys/module/wakelock/parameters/debug_mask;
echo 0 > /sys/module/userwakelock/parameters/debug_mask;
echo 0 > /sys/module/earlysuspend/parameters/debug_mask;
echo 0 > /sys/module/alarm/parameters/debug_mask;
echo 0 > /sys/module/alarm_dev/parameters/debug_mask;
echo 0 > /sys/module/binder/parameters/debug_mask;
echo 0 > /sys/module/lge_touch_core/parameters/debug_mask; 

# increase sched timings

echo 15000000 > /proc/sys/kernel/sched_latency_ns;
echo 2000000 > /proc/sys/kernel/sched_min_granularity_ns;
echo 3000000 > /proc/sys/kernel/sched_wakeup_granularity_ns;



# adjust background app cgroup priority
echo 91 > /dev/cpuctl/apps/bg_non_interactive/cpu.shares;
echo 400000 > /dev/cpuctl/apps/bg_non_interactive/cpu.rt_runtime_us;


#I/o sched
echo "sio" > /sys/block/mmcblk0/queue/scheduler;


chmod 777 /sys/block/mmcblk0/queue/read_ahead_kb;
echo 2048 > /sys/block/mmcblk0/queue/read_ahead_kb;
chmod 777 /sys/block/mmcblk1/queue/read_ahead_kb;
echo 2048 > /sys/block/mmcblk1/queue/read_ahead_kb;
chmod 777 /sys/devices/virtual/bdi/179:0/read_ahead_kb;
echo 2048 > /sys/devices/virtual/bdi/179:0/read_ahead_kb;
if [ ! -e /sys/block/mmcblk0/queue/read_ahead_kb ];
then
sleep 60;
fi;
chmod 777 /sys/block/mmcblk0/queue/read_ahead_kb;
echo 2048 > /sys/block/mmcblk0/queue/read_ahead_kb;
chmod 777 /sys/block/mmcblk1/queue/read_ahead_kb;
echo 2048 > /sys/block/mmcblk1/queue/read_ahead_kb;
chmod 777 /sys/devices/virtual/bdi/179:0/read_ahead_kb;
echo 2048 > /sys/devices/virtual/bdi/179:0/read_ahead_kb;

# cpu, sched and cache tweaks
echo 0 > /sys/devices/system/cpu/sched_mc_power_savings;
echo 15000000 > /proc/sys/kernel/sched_latency_ns;
echo 2000000 > /proc/sys/kernel/sched_min_granularity_ns;
echo 3000000 > /proc/sys/kernel/sched_wakeup_granularity_ns;
echo 92274688 > /proc/sys/vm/dirty_background_bytes;
echo 104857600 > /proc/sys/vm/dirty_bytes;
echo $(pgrep com.android.systemui) > /dev/cpuctl/tasks;

echo 0 > /proc/sys/net/ipv4/tcp_timestamps;
echo 1 > /proc/sys/net/ipv4/tcp_tw_reuse;
echo 1 > /proc/sys/net/ipv4/tcp_sack;
echo 1 > /proc/sys/net/ipv4/tcp_tw_recycle;
echo 1 > /proc/sys/net/ipv4/tcp_window_scaling;
echo 5 > /proc/sys/net/ipv4/tcp_keepalive_probes;
echo 30 > /proc/sys/net/ipv4/tcp_keepalive_intvl;
echo 30 > /proc/sys/net/ipv4/tcp_fin_timeout;
echo 404480 > /proc/sys/net/core/wmem_max;
echo 404480 > /proc/sys/net/core/rmem_max;
echo 256960 > /proc/sys/net/core/rmem_default;
echo 256960 > /proc/sys/net/core/wmem_default;
echo 4096,16384,404480 > /proc/sys/net/ipv4/tcp_wmem;
echo 4096,87380,404480 > /proc/sys/net/ipv4/tcp_rmem; 

busybox sysctl -e -w net.ipv4.tcp_congestion_control=cubic;
busybox sysctl -e -w net.ipv4.tcp_timestamps=0;
busybox sysctl -e -w net.ipv4.tcp_sack=1;
busybox sysctl -e -w net.ipv4.tcp_fack=1;
busybox sysctl -e -w net.ipv4.tcp_window_scaling=1;
#
# Re-use sockets in time-wait state
busybox sysctl -e -w net.ipv4.tcp_tw_recycle=1;
busybox sysctl -e -w net.ipv4.tcp_tw_reuse=1;
#
# Hardening the TCP/IP stack to SYN attacks
# See http://www.symantec.com/connect/articles/hardening-tcpip-stack-syn-attacks
busybox sysctl -e -w net.ipv4.tcp_syncookies=1;
busybox sysctl -e -w net.ipv4.conf.all.rp_filter=1;
busybox sysctl -e -w net.ipv4.conf.default.rp_filter=1;
busybox sysctl -e -w net.ipv4.tcp_synack_retries=2;
busybox sysctl -e -w net.ipv4.tcp_syn_retries=2;
busybox sysctl -e -w net.ipv4.tcp_max_syn_backlog=1024;
#
busybox sysctl -e -w net.ipv4.tcp_max_tw_buckets=16384;            # Bump up tw_buckets in case we get DoS'd
busybox sysctl -e -w net.ipv4.icmp_echo_ignore_all=1;              # Ignore pings
busybox sysctl -e -w net.ipv4.icmp_ignore_bogus_error_responses=1; # Enable bad error message protection (should be enabled by default)
busybox sysctl -e -w net.ipv4.tcp_no_metrics_save=1;               # Don't cache ssthresh from previous connection
busybox sysctl -e -w net.ipv4.tcp_fin_timeout=15;
busybox sysctl -e -w net.ipv4.tcp_keepalive_intvl=30;
busybox sysctl -e -w net.ipv4.tcp_keepalive_probes=5;
busybox sysctl -e -w net.ipv4.tcp_keepalive_time=1800;
busybox sysctl -e -w net.ipv4.ip_forward=0;                        # Disable IP Packet forwarding (should be disabled already)
# Don't accept source routing
busybox sysctl -e -w net.ipv4.conf.default.accept_source_route=0 ;
busybox sysctl -e -w net.ipv4.conf.all.accept_source_route=0;
#
# Don't accept redirects
busybox sysctl -e -w net.ipv4.conf.all.accept_redirects=0;
busybox sysctl -e -w net.ipv4.conf.default.accept_redirects=0;
busybox sysctl -e -w net.ipv4.conf.all.secure_redirects=0;
busybox sysctl -e -w net.ipv4.conf.default.secure_redirects=0;
#
setprop profiler.force_disable_err_rpt 1;
setprop profiler.force_disable_ulog 1;

echo 1 > /proc/sys/vm/oom_kill_allocating_task;
echo 0 > /proc/sys/vm/laptop_mode;
echo 0 > /proc/sys/vm/panic_on_oom;
echo 20 > /proc/sys/vm/swappiness;
echo 3 > /proc/sys/vm/page-cluster;

mount -t debugfs none /sys/kernel/debug;
echo "NO_GENTLE_FAIR_SLEEPERS" > /sys/kernel/debug/sched_features;
echo "NO_NEW_FAIR_SLEEPERS" > /sys/kernel/debug/sched_features;
echo "NO_NORMALIZED_SLEEPERS" > /sys/kernel/debug/sched_features;
umount /sys/kernel/debug;

iw wlan0 set power_save on;
iwconfig wlan0 power 500m;

# more rational defaults for KSM
echo 256 > /sys/kernel/mm/ksm/pages_to_scan;
echo 1500 > /sys/kernel/mm/ksm/sleep_millisecs;

# decrease fs lease time
echo 10 > /proc/sys/fs/lease-break-time;

# disabled ASLR to increase AEM-JIT cache hit rate
echo 0 > /proc/sys/kernel/randomize_va_space;

# initialize timer_slack
echo 100000000 > /dev/cpuctl/apps/bg_non_interactive/timer_slack.min_slack_ns;


# wait for system being 'up'
until [ $(pgrep com.android.systemui) ] ; do
sleep 1
done

bb=/system/xbin/busybox

$bb fstrim /data
$bb fstrim /cache

sleep 2

# Default governor
echo dyninteractive > /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor;

echo "2560,5120,25600,30720,24320,49920" > /sys/module/lowmemorykiller/parameters/minfree

# lmk whitelist for common launchers+systemui and increase launcher priority
list="com.android.launcher com.google.android.googlequicksearchbox org.adw.launcher org.adwfreak.launcher net.alamoapps.launcher com.anddoes.launcher com.android.lmt com.chrislacy.actionlauncher.pro com.cyanogenmod.trebuchet com.gau.go.launcherex com.gtp.nextlauncher com.miui.mihome2 com.mobint.hololauncher com.mobint.hololauncher.hd com.mycolorscreen.themer com.qihoo360.launcher com.teslacoilsw.launcher com.tsf.shell org.zeam";
echo 1 > /sys/module/lowmemorykiller/parameters/donotkill_sysproc;
while sleep 60; do
  for class in $list; do
    if [ `$bb pgrep $class | head -n 1` ]; then
      launcher=`$bb pgrep $class`;
      echo "com.android.systemui,$class" > /sys/module/lowmemorykiller/parameters/donotkill_sysproc_names;
      echo -17 > /proc/$launcher/oom_adj;
      $bb renice -18 $launcher;
    fi;
  done;
  exit;
done&


if [ -e /dev/frandom ]; then
	chmod 644 /dev/frandom;
	mv /dev/random /dev/random.ori;
	mv /dev/urandom /dev/urandom.ori;
	ln /dev/frandom /dev/random;
	chmod 644 /dev/random;
	ln /dev/frandom /dev/urandom;
	chmod 644 /dev/urandom;
fi
